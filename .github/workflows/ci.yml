name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

defaults:
  run:
    working-directory: 'fccn.ansible_pakiti_client'

jobs:
  create-virtualenv:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          path: 'fccn.ansible_pakiti_client'

    - name: Setup Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Restore virtualenv
      uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv

    - name: Restore pip
      uses: syphar/restore-pip-download-cache@v1
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

    - name: Install requirements
      run: pip install -r requirements/dev.txt
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

  linter:
    needs: create-virtualenv
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          path: 'fccn.ansible_pakiti_client'
    
    - name: Setup Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Restore virtualenv
      uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv

    - name: Linting
      run: make lint

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          # - rockylinux9
          - rockylinux8
          - centos7
          # - ubuntu2204
          - ubuntu2004
          # - debian12
          - debian11

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: 'fccn.ansible_pakiti_client'

      - name: Setup Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Restore virtual environment
        uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv

      - name: Restore pip
        uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Install requirements
        run: pip install -r requirements/dev.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
